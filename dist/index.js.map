{"mappings":"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","sources":["src/index.js","src/candlestick-chart.js","src/candlestick.js"],"sourcesContent":["'use strict';\n\nimport CandleSticksChart from './candlestick-chart.js';\n\ncustomElements.define('candlestick-chart', CandleSticksChart);\n","'use strict';\n\nimport CandleStick from './candlestick.js';\n\nclass CandleSticksChart extends HTMLElement {\n\n    #data;\n    #canvas;\n    #context;\n    #priceLabelWidth;\n    #lastMousePosition;\n    #horizontalLines;\n    #highestPrice;\n    #lowestPrice;\n    #priceFraction;\n\n    constructor() {\n\n        super();\n\n        const shadow = this.attachShadow({mode: 'open'});\n        shadow.innerHTML = `\n            <style>\n            :host {\n                cursor: crosshair;\n                display: block;\n            }\n            </style>\n            <canvas></canvas>\n        `;\n\n        this.#data    = [];\n        this.#canvas  = shadow.querySelector('canvas');\n        this.#context = this.#canvas.getContext('2d');\n\n        const aspectRatio = shadow.host.parentNode.getBoundingClientRect();\n\n        this.#canvas.height = aspectRatio.height;\n        this.#canvas.width = aspectRatio.width;\n\n        this.#priceLabelWidth = 80;\n        this.#lastMousePosition = {offsetX: 0, offsetY: 0};\n        this.#horizontalLines = 15;\n        this.#highestPrice = 0;\n        this.#lowestPrice = 0;\n        this.#priceFraction = 0;\n\n        this.drawCursor = this.drawCursor.bind(this);\n\n        this.#canvas.addEventListener('mousemove', e => this.draw() || this.drawCursor(e));\n        this.#canvas.addEventListener('mouseout', e => this.draw());\n\n        this.draw();\n    }\n\n    drawCursor(event) {\n\n        if (event) {\n            this.#lastMousePosition = {offsetX: event.offsetX, offsetY: event.offsetY};\n        }\n\n        const textX = this.#canvas.width - 40;\n        const price = parseFloat(this.#highestPrice - (event.offsetY * this.#priceFraction) / (this.#canvas.height / this.#horizontalLines)).toFixed(2);\n        this.#context.strokeStyle = '#aab';\n        this.#context.lineWidth = .8;\n        this.#context.setLineDash([4, 4]);\n\n        this.#context.beginPath();\n        this.#context.moveTo(0, event.offsetY);\n        this.#context.lineTo(this.#canvas.width, event.offsetY);\n        this.#context.stroke();\n\n        this.#context.beginPath();\n        this.#context.moveTo(event.offsetX, 0);\n        this.#context.lineTo(event.offsetX, this.#canvas.height);\n        this.#context.stroke();\n\n        this.#context.beginPath();\n        this.#context.fillStyle = '#1f1f27';\n        this.#context.fillRect(textX - 40, event.offsetY - 12, this.#priceLabelWidth, 24);\n        this.#context.fillStyle = '#fff'; \n        this.#context.fillText(price, textX, event.offsetY + 5);\n\n        this.#context.fillStyle = '#aab';\n        this.#context.strokeStyle = '#aab';\n        this.#context.lineWidth = 1;\n        this.#context.setLineDash([1]);\n    }\n\n    draw() {\n        this.#context.clearRect(0, 0, this.#canvas.width, this.#canvas.height);\n\n        this.#context.lineWidth = 1;\n        this.#context.font = '14px sans-serif';\n        this.#context.textAlign = 'center';\n\n        for (let i = 0; i <= this.#horizontalLines; i++) {\n            const posY = this.#canvas.height / this.#horizontalLines * i;\n            this.#context.beginPath();\n            this.#context.fillStyle = '#1f1f27';\n            this.#context.strokeStyle = '#1f1f27';\n            this.#context.setLineDash([]);\n            this.#context.moveTo(0, posY);\n            this.#context.lineTo(this.#canvas.width - this.#priceLabelWidth, posY);\n            this.#context.stroke();\n            this.#context.fillStyle = '#aab';\n            this.#context.fillText(parseFloat(i * this.#priceFraction - this.#highestPrice).toFixed(2), this.#canvas.width - 40, posY);\n        }\n\n        for (let i = 0; i < Math.ceil(this.#canvas.width / 40); i++) {\n            this.#context.beginPath();\n            this.#context.fillStyle = '#1f1f27';\n            this.#context.fillRect(Math.max(i, 1) * 38, 0, 1, this.#canvas.height);\n        }\n\n        const highestVolume = Math.max(...this.#data.flatMap(c => c.volume));\n\n        this.#data.forEach((json, index) => {\n            const candle = new CandleStick(\n                json.open,\n                json.close,\n                json.high,\n                json.low,\n                json.volume\n            );\n\n            this.#context.fillStyle = candle.isBear() ? '#bd4343' : '#508850';\n            this.#context.strokeStyle = this.#context.fillStyle;\n\n            const candlePosY = (this.#canvas.height / this.#horizontalLines) * ((this.#highestPrice - Math.max(candle.open, candle.close)) / this.#priceFraction);\n            const candleHeight  = (this.#canvas.height / this.#horizontalLines) * ((this.#highestPrice - Math.min(candle.open, candle.close)) / this.#priceFraction) - candlePosY;\n\n            this.#context.fillRect(\n                index * (CandleStick.width() + 10),\n                candlePosY,\n                CandleStick.width(),\n                candleHeight\n            );\n\n            const candleHighPosY = (this.#canvas.height / this.#horizontalLines) * ((this.#highestPrice - candle.high) / this.#priceFraction);\n            const candleHighHeight = (this.#canvas.height / this.#horizontalLines) * ((this.#highestPrice - candle.low) / this.#priceFraction) - candleHighPosY;\n\n            this.#context.fillRect(\n                Math.floor((CandleStick.width() + 10) * index + CandleStick.width() / 2),\n                candleHighPosY,\n                candle.highLowWidth(),\n                candleHighHeight\n            );\n\n            this.#context.globalAlpha = .4;\n\n            const volumeHeight = ((this.#canvas.height / 3) * candle.volume) / highestVolume;\n\n            this.#context.fillRect(\n                index * (CandleStick.width() + 10),\n                this.#canvas.height - volumeHeight,\n                CandleStick.width(),\n                volumeHeight\n            );\n\n            this.#context.globalAlpha = 1;\n\n            if (this.#data.length === (index + 1)) {\n                const posY = (this.#canvas.height / this.#horizontalLines) * ((this.#highestPrice - candle.close) / this.#priceFraction)\n                this.#context.beginPath();\n                this.#context.shadowBlur = 10;\n                this.#context.shadowColor = this.#context.fillStyle;\n                this.#context.lineWidth = 2;\n                this.#context.setLineDash([2, 2]);\n                this.#context.moveTo(0, posY);\n                this.#context.lineTo(this.#canvas.width, posY);\n                this.#context.stroke();\n                this.#context.fillRect(this.#canvas.width - this.#priceLabelWidth, posY - 12, this.#priceLabelWidth, 24);\n                this.#context.fillStyle = '#fff';\n                this.#context.fillText(\n                    parseFloat(candle.close).toFixed(2),\n                    this.#canvas.width - 40,\n                    posY + 4\n                );\n                this.#context.shadowBlur = 0;\n                this.#context.shadowColor = '#aab';\n                this.#context.lineWidth = 1;\n            }\n        });\n\n        this.drawCursor(this.#lastMousePosition);\n    }\n\n    updateData(data) {\n        data = data.filter(c => c.volume > 0);\n\n        const maxCandles = Math.floor((this.#canvas.width - this.#priceLabelWidth) / (CandleStick.width() + 10));\n\n        this.#data = data.length > maxCandles\n            ? [...data].slice(-Math.abs(maxCandles))\n            : data;\n\n        const priceRange = 1;\n        const dataFlat = this.#data.flatMap(c => c.close);\n\n        this.#highestPrice = Math.max(...dataFlat) + priceRange;\n        this.#lowestPrice = Math.min(...dataFlat) - priceRange;\n        this.#priceFraction = (this.#highestPrice - this.#lowestPrice) / this.#horizontalLines;\n\n        this.draw();\n    }\n}\n\nexport default CandleSticksChart;\n","'use strict';\n\nclass CandleStick {\n\n    #open\n    #close\n    #high\n    #low\n    #volume\n\n    constructor(open, close, high, low, volume) {\n        this.#open = open;\n        this.#close = close;\n        this.#high = high;\n        this.#low = low;\n        this.#volume = volume;\n    }\n\n    static width() {\n        return 8;\n    }\n\n    get open() {\n        return this.#open\n    }\n\n    get close() {\n        return this.#close;\n    }\n\n    get high() {\n        return this.#high;\n    }\n\n    get low() {\n        return this.#low;\n    }\n\n    get volume() {\n        return this.#volume;\n    }\n\n    isBear() {\n        return this.#open > this.#close;\n    }\n\n    highLowWidth() {\n        return 1;\n    }\n\n    height() {\n        return this.isBear()\n            ? this.#open - this.#close\n            : this.#close - this.#open;\n    }\n\n    highLowHeight() {\n        return this.#high - this.#low;\n    }\n}\n\nexport default CandleStick;\n"],"names":[],"version":3,"file":"index.js.map"}